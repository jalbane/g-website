{"version":3,"sources":["serviceWorker.js","Roster.js","editedApp.js","Rankingslist.js","Rankings.js","Home.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Roster","Specialization","roleImgSrc","characterClass","this","props","spec","name","TypeError","role","class","className","id","href","target","rel","src","tnail","alt","Component","ReactGA","initialize","pageview","pathname","search","editedApp","blizzResponse","loading","raider","filteredRaider","fetch","method","body","headers","Authorization","response","json","data","setState","access_token","url","members","intialArray","filteredArray","filter","arr","rank","sortedArray","sort","a","b","character","localeCompare","finalArray","map","item","index","thumbnail","key","style","margin","display","fontSize","color","onClick","Rankingslist","raidSummary","displayName","summary","realm","world","React","Rankings","bod","uldir","cos","tep","dataRankings","fillRankings","longName","raid_progression","raid_rankings","heroic","mythic","Home","load","history","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","NavDropdown","title","Item","exact","path","component","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2e5f4f25.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\r\nimport './roster.css'\r\n\r\nclass Roster extends Component{\r\n\trender(){\r\n\t\tlet Specialization\r\n\t\tlet roleImgSrc\r\n\t\ttry {\r\n\t\t\tSpecialization = (this.props.spec.name)\r\n\t\t} \r\n\t\tcatch (error){\r\n\t\t\tif (error instanceof TypeError)\r\n\t\t\t\t  Specialization = `Error`\r\n\t\t}\t\r\n\r\n\t\ttry {\r\n\t\t\troleImgSrc = null\r\n\t\t\tif (this.props.spec.role === 'HEALING')\r\n\t\t\t\troleImgSrc = 1\r\n\t\t\telse if (this.props.spec.role === 'DPS')\r\n\t\t\t\troleImgSrc = 2\r\n\t\t\telse \r\n\t\t\t\troleImgSrc = 3\r\n\t\t} \r\n\t\tcatch (error){\r\n\t\t\tif (error instanceof TypeError)\r\n\t\t\t\troleImgSrc = 'error'\r\n\t\t}\r\n\t\tlet characterClass\r\n\t\tswitch(this.props.class){\r\n\t\t\tcase 1:\r\n\t\t\t\tcharacterClass = 'Warrior'\r\n\t\t\t\tbreak\r\n\t\t\tcase 2: \r\n\t\t\t\tcharacterClass = 'Paladin'\r\n\t\t\t\tbreak\r\n\t\t\tcase 3:\r\n\t\t\t\tcharacterClass = 'Hunter'\r\n\t\t\t\tbreak\r\n\t\t\tcase 4:\r\n\t\t\t\tcharacterClass = 'Rogue'\r\n\t\t\t\tbreak\r\n\t\t\tcase 5:\r\n\t\t\t\tcharacterClass = 'Priest'\r\n\t\t\t\tbreak\r\n\t\t\tcase 6:\r\n\t\t\t\tcharacterClass = 'Death Knight'\r\n\t\t\t\tbreak\r\n\t\t\tcase 7:\r\n\t\t\t\tcharacterClass = 'Shaman'\r\n\t\t\t\tbreak\r\n\t\t\tcase 8:\r\n\t\t\t\tcharacterClass = 'Mage'\r\n\t\t\t\tbreak\r\n\t\t\tcase 9:\r\n\t\t\t\tcharacterClass = 'Warlock'\r\n\t\t\t\tbreak\r\n\t\t\tcase 10:\r\n\t\t\t\tcharacterClass = 'Monk'\r\n\t\t\t\tbreak\t\r\n\t\t\tcase 11:\r\n\t\t\t\tcharacterClass = 'Druid'\r\n\t\t\t\tbreak\r\n\t\t\tcase 12:\r\n\t\t\t\tcharacterClass = 'Demon Hunter'\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tcharacterClass = 'Error'\t\t\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t\t<div className = 'character-container'>\r\n\t\t\t\t\t<div className = 'img-container'> \r\n\t\t\t\t\t\t<a id = \"redirect\" href = {`https://raider.io/characters/us/lightbringer/${this.props.name}`} target = \"_blank\" rel=\"noopener noreferrer\" >\r\n\t\t\t\t\t\t\t<img className = 'character-img' src = {`https://render-us.worldofwarcraft.com/character/${this.props.tnail}`} alt = '' /> \r\n\t\t\t\t\t\t</a> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span > <strong> {this.props.name} </strong> </span>\r\n\t\t\t\t\t<span > {Specialization}</span>\t\r\n\t\t\t\t\t<span > {characterClass}</span>\r\n\t\t\t\t\t{roleImgSrc === 1 ? <div className = 'Healer'>  </div>: roleImgSrc === 2? <div className = 'Dps'> </div> :roleImgSrc === 3? <div className = 'Tank'> </div>: null}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\nexport default Roster;","import React, {Component} from 'react';\r\nimport Roster from './Roster';\r\nimport './editedApp.css';\r\nimport 'tachyons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ReactGA from 'react-ga';\r\n\r\nReactGA.initialize('UA-152946505-1')\r\nReactGA.pageview(window.location.pathname + window.location.search)\r\nclass editedApp extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state ={ \r\n      blizzResponse: '',\r\n      loading: true,\r\n      raider: [\r\n\r\n      ],\r\n      filteredRaider: [\r\n\r\n      ]\r\n    };\r\n  }\r\n\r\n  async componentDidMount(){\r\n    let response = await fetch(\"https://us.battle.net/oauth/token\",{ \r\n              method: \"POST\",\r\n              body: \"grant_type=client_credentials\",\r\n              headers: {\r\n                Authorization: \"Basic ODExNmYzNGI1NmY2NGM4ZTlkMDJhYWI2MjY1MjNjMzU6d2FscVFOYTBTZjRKa0MweTBxSllHNk5tRjFuYjJTd3A=\",\r\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n              }\r\n            })\r\n    let data = await response.json()\r\n    this.setState({blizzResponse: data.access_token})\r\n    let url = 'https://us.api.blizzard.com/wow/guild/Lightbringer/NFA?fields=members&locale=en_US&access_token='\r\n    url += this.state.blizzResponse\r\n    await fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => this.setState( {[`raider`]: data.members}))\r\n\r\n    let intialArray, filteredArray, sortedArray, finalArray   \r\n    intialArray = this.state.raider\r\n    filteredArray = intialArray.filter( arr => arr.rank !== 2 && arr.rank < 5)\r\n    sortedArray = filteredArray.sort( (a,b) => b.character.spec.role.localeCompare(a.character.spec.role))\r\n    finalArray = sortedArray.map( (item, index) => \r\n      <Roster name= {item.character.name} \r\n              tnail = {item.character.thumbnail} \r\n              spec = {item.character.spec}\r\n              class = {item.character.class}\r\n              key = {index}  \r\n              rank = {item.rank}\r\n      />)\r\n    this.setState({'filteredRaider': finalArray, loading: false})    \r\n  }\r\n\r\n  render(){ \r\n    let intialArray, filteredArray, sortedArray, finalArray   \r\n    console.log(this.state.raider)\r\n    return ( \r\n      <div className=\"App\">\r\n        <p style = {{margin: 20, display: 'inline-block', fontSize: 20,color: 'white'}}> Sort by: <button \r\n          onClick = {() => {\r\n            \r\n            intialArray = this.state.raider\r\n            filteredArray = intialArray.filter( arr => arr.rank !== 2 && arr.rank < 5)\r\n            sortedArray = filteredArray.sort( (a,b) => a.character.name.localeCompare(b.character.name))\r\n            finalArray = sortedArray.map( (item, index) => \r\n            <Roster name= {item.character.name} \r\n                    tnail = {item.character.thumbnail} \r\n                    spec = {item.character.spec}\r\n                    class = {item.character.class}\r\n                    key = {index}  \r\n            />)\r\n          this.setState({'filteredRaider': finalArray})\r\n          }}> \r\n          Name</button>\r\n          <button \r\n          onClick = {() => {\r\n            \r\n            intialArray = this.state.raider\r\n            filteredArray = intialArray.filter( arr => arr.rank !== 2 && arr.rank < 5)\r\n            sortedArray = filteredArray.sort( (a,b) => b.character.spec.role.localeCompare(a.character.spec.role))\r\n            finalArray = sortedArray.map( (item, index) => \r\n            <Roster name= {item.character.name} \r\n                    tnail = {item.character.thumbnail} \r\n                    spec = {item.character.spec}\r\n                    class = {item.character.class}\r\n                    key = {index}  \r\n            />)\r\n          this.setState({'filteredRaider': finalArray})\r\n          }}> \r\n          Role</button>\r\n          <button \r\n          onClick = {() => {\r\n            \r\n            intialArray = this.state.raider\r\n            filteredArray = intialArray.filter( arr => arr.rank !== 2 && arr.rank < 5)\r\n            sortedArray = filteredArray.sort( (a,b) => a.rank - b.rank)\r\n            finalArray = sortedArray.map( (item, index) => \r\n            <Roster name= {item.character.name} \r\n                    tnail = {item.character.thumbnail} \r\n                    spec = {item.character.spec}\r\n                    class = {item.character.class}\r\n                    key = {index}  \r\n            />)\r\n          this.setState({'filteredRaider': finalArray})\r\n          }}> \r\n          Guild Rank (High to Low)</button>\r\n\r\n          <button \r\n          onClick = {() => {\r\n            \r\n            intialArray = this.state.raider\r\n            filteredArray = intialArray.filter( arr => arr.rank !== 2 && arr.rank < 5)\r\n            sortedArray = filteredArray.sort( (a,b) => a.character.class - b.character.class)\r\n            finalArray = sortedArray.map( (item, index) => \r\n            <Roster name= {item.character.name} \r\n                    tnail = {item.character.thumbnail} \r\n                    spec = {item.character.spec}\r\n                    class = {item.character.class}\r\n                    key = {index}  \r\n            />)\r\n          this.setState({'filteredRaider': finalArray})\r\n          }}> \r\n          Class </button>\r\n        </p> \r\n          {this.state.loading ? <div className = 'loading-banner'><h1>Loading...</h1></div>: \r\n            <div >\r\n              {/* this div is part of the ternary operator*/}\r\n              {this.state.filteredRaider}\r\n            </div>\r\n          }\r\n    </div>);\r\n  }\r\n}\r\nexport default editedApp;","import React from 'react'\r\nimport './rankingslist.css'\r\n\r\nclass Rankingslist extends React.Component{\r\n\trender(){\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className = 'rankings-row'>\r\n\t\t\t\t<span className ='rankings-cell'> <h5> {this.props.raidSummary.displayName} </h5> </span>\r\n\t    \t\t<span className ='rankings-cell'> {this.props.raidSummary.summary} </span>\r\n\t    \t\t<span className ='rankings-cell'> {this.props.raidSummary.realm} </span>\r\n\t    \t\t<span className ='rankings-cell'> {this.props.raidSummary.world} </span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Rankingslist\r\n","import React from 'react'\r\nimport './rankings.css'\r\nimport Rankingslist from './Rankingslist'\r\n\r\nclass Rankings extends React.Component{\r\n\tconstructor(props){\r\n\tsuper(props)\r\n\tthis.state = {\r\n\t\t\tbod: {\r\n\r\n\t\t\t},\r\n\t\t\tuldir: {\r\n\r\n\t\t\t},\r\n\t\t\tcos: {\r\n\r\n\t\t\t},\r\n\t\t\ttep: {\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount(){\r\n\t\tlet response= await fetch('https://raider.io/api/v1/guilds/profile?region=US&realm=Lightbringer&name=NFA&fields=raid_progression')\r\n\t\tlet data = await response.json()\r\n\t\r\n\t\t/*********\t\tReplaced by function fillSummary \t***********\r\n\t\t\t\t\t\tfillSummary replaced by fillRankings\r\n\t\t\t ------ \tsomething like this can also be done\t---------- \r\n\t\t\tthis.setState({uldir: \r\n\t\t\t\t{summary:data.raid_progression.uldir.summary, \r\n\t\t\t\tprogress:data.raid_progression.uldir.summary\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t*/\r\n\r\n\t\tresponse = await fetch('https://raider.io/api/v1/guilds/profile?region=us&realm=lightbringer&name=nfa&fields=raid_rankings')\r\n\t\tlet dataRankings = await response.json()\r\n\r\n\t\tthis.fillRankings('uldir', 'uldir', data, dataRankings, 'Uldir')\r\n\t\tthis.fillRankings('bod', 'battle-of-dazaralor', data, dataRankings, 'Battle of Dazar\\'alor')\r\n\t\tthis.fillRankings('cos', 'crucible-of-storms', data, dataRankings, 'Crucible of Storms')\r\n\t\tthis.fillRankings('tep', 'the-eternal-palace', data, dataRankings, 'Eternal Palace')\r\n\t}\r\n\r\n\tfillRankings(name, longName, data, dataRankings, displayName){\r\n\t\tif (name === 'cos'){\r\n\t\t\tthis.setState( { [name]: \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdisplayName: [displayName],\r\n\t\t\t\t\t\t\tsummary: data.raid_progression[longName].summary,\r\n\t\t\t\t\t\t\tworld: dataRankings.raid_rankings[longName].heroic.world,\r\n\t\t\t\t\t\t\trealm: dataRankings.raid_rankings[longName].heroic.realm\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t })\r\n\t\t}\r\n\t\telse{\r\n\t\tthis.setState( { [name]: \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdisplayName: [displayName],\r\n\t\t\t\t\t\t\tsummary: data.raid_progression[longName].summary,\r\n\t\t\t\t\t\t\tworld: dataRankings.raid_rankings[longName].mythic.world,\r\n\t\t\t\t\t\t\trealm: dataRankings.raid_rankings[longName].mythic.realm\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t })\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\tlet data = this.state\r\n\treturn (\r\n\t\t\t<div className = 'rankings-page'> \r\n\t\t\t\t<div className = 'rankings-container'>\r\n\t\t\t\t\t<div className = 'rankings-row'>\r\n\t\t\t\t\t\t<span className ='rankings-cell'> <h4> Raid Name </h4></span>\r\n\t\t    \t\t\t<span className ='rankings-cell'> <h4> Progress </h4> </span>\r\n\t\t    \t\t\t<span className ='rankings-cell'> <h4> Realm Ranking </h4> </span>\r\n\t\t    \t\t\t<span className ='rankings-cell'> <h4> World Ranking </h4> </span>\r\n\t    \t\t\t</div>\r\n\t\t    \t\t<Rankingslist raidSummary = {data.uldir} />\r\n\t\t    \t\t<Rankingslist raidSummary = {data.bod} />\r\n\t\t    \t\t<Rankingslist raidSummary = {data.cos} />\r\n\t\t    \t\t<Rankingslist raidSummary = {data.tep} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Rankings;","import React, {Component} from 'react';\r\nimport {HashRouter, Route, NavLink} from 'react-router-dom';\r\nimport editedApp from './editedApp';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Rankings from './Rankings'\r\nimport './home.css'\r\nimport ReactGA from 'react-ga'\r\n\r\nReactGA.initialize('UA-152946505-1')\r\nReactGA.pageview(window.location.pathname + window.location.search)\r\nclass Home extends Component{\r\n  constructor(props){\r\n    super(props)\r\n      this.state = {\r\n        load: true\r\n      };\r\n  }\r\n\r\n\trender(){\r\n\treturn(\r\n\t\t<HashRouter history=\"browserHistory\">\t     \r\n      <Navbar className = 'main-bar'bg=\"light\" expand=\"lg\" style = {{'minHeight': '120px', 'fontSize': '24px', 'width': '100%'}}>\r\n          <Navbar.Brand style = {{'margin':15,'fontSize': '24px'}}>NFA</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <NavLink to=\"/\" style = {{'margin':15, 'color': 'black', 'textDecoration': 'none'}}><div className = 'selection'>Rankings</div></NavLink>   \r\n              <NavLink to=\"/editedApp\" style = {{'margin':15, 'color': 'black', 'textDecoration': 'none'}}><div className = 'selection'>Roster</div></NavLink>\r\n              <NavDropdown style = {{'margin':'auto'}} title=\"Additional Links\" id=\"basic-nav-dropdown\">   \r\n                <NavDropdown.Item href=\"https://raider.io/guilds/us/lightbringer/NFA\" target = \"_blank\">Raider.io</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"https://www.wowprogress.com/guild/us/lightbringer/NFA\" target = \"_blank\">Wow progress</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"https://www.warcraftlogs.com/guild/id/357706\" target = \"_blank\">Warcraft logs</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Route exact path = \"/\"  component = {Rankings}/> \r\n        <Route path = \"/editedApp\" component = {editedApp}/>\r\n\t\t</HashRouter>  \r\n  );\r\n\t}\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home'\nimport ReactGA from 'react-ga'\n\nReactGA.initialize('UA-152946505-1')\nReactGA.pageview(window.location.pathname + window.location.search)\nReactDOM.render(<Home/>, document.getElementById('root'));\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}