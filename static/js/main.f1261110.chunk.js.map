{"version":3,"sources":["serviceWorker.js","Roster.js","editedApp.js","Rankingslist.js","Rankings.js","Home.js","index.js"],"names":["Boolean","window","location","hostname","match","Roster","Specialization","roleImgSrc","characterClass","this","props","spec","name","error","TypeError","role","class","className","id","href","target","rel","src","tnail","alt","style","height","width","Component","editedApp","state","blizzResponse","loading","raider","fetch","method","body","headers","Authorization","response","json","data","setState","access_token","url","then","members","newArr","filter","arr","rank","map","item","index","character","thumbnail","Rankingslist","raidSummary","displayName","summary","realm","world","React","Rankings","bod","uldir","cos","tep","dataRankings","fillRankings","longName","raid_progression","raid_rankings","heroic","mythic","Home","load","history","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","to","NavDropdown","title","Item","path","exact","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1261110.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\r\nimport './roster.css'\r\n\r\n\r\nclass Roster extends Component{\r\n\trender(){\r\n\r\n\t\tlet Specialization\r\n\t\tlet roleImgSrc\r\n\t\ttry {\r\n\t\t\tSpecialization = (this.props.spec.name)\r\n\t\t} \r\n\t\tcatch (error){\r\n\t\t\tif (error instanceof TypeError)\r\n\t\t\t\t  Specialization = `Error`\r\n\t\t}\t\r\n\r\n\t\ttry {\r\n\t\t\tif (this.props.spec.role === 'HEALING')\r\n\t\t\t\troleImgSrc = 'uiHealer.png'\r\n\t\t\telse if (this.props.spec.role === 'DPS')\r\n\t\t\t\troleImgSrc = 'uiDps.PNG'\r\n\t\t\telse \r\n\t\t\t\troleImgSrc = 'uiTank.PNG'\r\n\t\t} \r\n\t\tcatch (error){\r\n\t\t\tif (error instanceof TypeError)\r\n\t\t\t\troleImgSrc = ' '\r\n\t\t}\r\n\t\tlet characterClass\r\n\t\tswitch(this.props.class){\r\n\t\t\tcase 1:\r\n\t\t\t\tcharacterClass = 'Warrior'\r\n\t\t\t\tbreak\r\n\t\t\tcase 2: \r\n\t\t\t\tcharacterClass = 'Paladin'\r\n\t\t\t\tbreak\r\n\t\t\tcase 3:\r\n\t\t\t\tcharacterClass = 'Hunter'\r\n\t\t\t\tbreak\r\n\t\t\tcase 4:\r\n\t\t\t\tcharacterClass = 'Rogue'\r\n\t\t\t\tbreak\r\n\t\t\tcase 5:\r\n\t\t\t\tcharacterClass = 'Priest'\r\n\t\t\t\tbreak\r\n\t\t\tcase 6:\r\n\t\t\t\tcharacterClass = 'Death Knight'\r\n\t\t\t\tbreak\r\n\t\t\tcase 7:\r\n\t\t\t\tcharacterClass = 'Shaman'\r\n\t\t\t\tbreak\r\n\t\t\tcase 8:\r\n\t\t\t\tcharacterClass = 'Mage'\r\n\t\t\t\tbreak\r\n\t\t\tcase 9:\r\n\t\t\t\tcharacterClass = 'Warlock'\r\n\t\t\t\tbreak\r\n\t\t\tcase 10:\r\n\t\t\t\tcharacterClass = 'Monk'\r\n\t\t\t\tbreak\t\r\n\t\t\tcase 11:\r\n\t\t\t\tcharacterClass = 'Druid'\r\n\t\t\t\tbreak\r\n\t\t\tcase 12:\r\n\t\t\t\tcharacterClass = 'Demon Hunter'\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tcharacterClass = 'Error'\t\t\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t\t<div className = 'character-container'>\r\n\t\t\t\t\t<div className = 'img-container'> \r\n\t\t\t\t\t\t<a id = \"redirect\" href = {`https://raider.io/characters/us/lightbringer/${this.props.name}`} target = \"_blank\" rel=\"noopener noreferrer\" >\r\n\t\t\t\t\t\t\t<img className = 'character-img' src = {`https://render-us.worldofwarcraft.com/character/${this.props.tnail}`} alt = '' /> \r\n\t\t\t\t\t\t</a> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span > <strong> {this.props.name} </strong> </span>\r\n\t\t\t\t\t<span > {Specialization}</span>\t\r\n\t\t\t\t\t<span > {characterClass}</span>\r\n\t\t\t\t\t<span> <img className = 'role-symbol' src = {`../public/${roleImgSrc}`} alt = 'not found' style={{height: 55, width: 55}} /> </span>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\nexport default Roster;","import React, {Component} from 'react';\r\nimport Roster from './Roster'\r\nimport './editedApp.css';\r\nimport 'tachyons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nclass editedApp extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state ={ \r\n      blizzResponse: '',\r\n      loading: true,\r\n      raider: [\r\n      ]\r\n    };\r\n  }\r\n\r\n  async componentDidMount(){\r\n    let response = await fetch(\"https://us.battle.net/oauth/token\",{ \r\n              method: \"POST\",\r\n              body: \"grant_type=client_credentials\",\r\n              headers: {\r\n                Authorization: \"Basic ODExNmYzNGI1NmY2NGM4ZTlkMDJhYWI2MjY1MjNjMzU6d2FscVFOYTBTZjRKa0MweTBxSllHNk5tRjFuYjJTd3A=\",\r\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n              }\r\n            })\r\n    let data = await response.json()\r\n    this.setState({blizzResponse: data.access_token})\r\n    let url = 'https://us.api.blizzard.com/wow/guild/Lightbringer/NFA?fields=members&locale=en_US&access_token='\r\n    url += this.state.blizzResponse\r\n    await fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => this.setState( {[`raider`]: data.members}))\r\n    this.setState({loading: false})    \r\n  }\r\n\r\n  render(){ \r\n    let oldarr = this.state.raider\r\n    let updatedArr = oldarr.filter(arr =>arr.rank !== 2 && arr.rank < 5)\r\n    let newArr = updatedArr.map( (item, index) => \r\n      <Roster name= {item.character.name} \r\n              tnail = {item.character.thumbnail} \r\n              spec = {item.character.spec}\r\n              class = {item.character.class}\r\n      />)\r\n    return (\r\n      \r\n      <div className=\"App\">\r\n          {this.state.loading ? <div className = 'loading-banner'><h1>Loading...</h1></div>: \r\n            <div >\r\n\r\n              {/* this div is part of the ternary operator*/}\r\n              {newArr}\r\n            </div>\r\n          }\r\n    </div>);\r\n  }\r\n}\r\nexport default editedApp;","import React from 'react'\r\nimport './rankingslist.css'\r\n\r\nclass Rankingslist extends React.Component{\r\n\trender(){\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className = 'rankings-row'>\r\n\t\t\t\t<span className ='rankings-cell'> <h5> {this.props.raidSummary.displayName} </h5> </span>\r\n\t    \t\t<span className ='rankings-cell'> {this.props.raidSummary.summary} </span>\r\n\t    \t\t<span className ='rankings-cell'> {this.props.raidSummary.realm} </span>\r\n\t    \t\t<span className ='rankings-cell'> {this.props.raidSummary.world} </span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Rankingslist\r\n","import React from 'react'\r\nimport './rankings.css'\r\nimport Rankingslist from './Rankingslist'\r\n\r\nclass Rankings extends React.Component{\r\n\tconstructor(props){\r\n\tsuper(props)\r\n\tthis.state = {\r\n\t\t\tbod: {\r\n\r\n\t\t\t},\r\n\t\t\tuldir: {\r\n\r\n\t\t\t},\r\n\t\t\tcos: {\r\n\r\n\t\t\t},\r\n\t\t\ttep: {\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount(){\r\n\t\tlet response= await fetch('https://raider.io/api/v1/guilds/profile?region=US&realm=Lightbringer&name=NFA&fields=raid_progression')\r\n\t\tlet data = await response.json()\r\n\t\r\n\t\t/*********\t\tReplaced by function fillSummary \t***********\r\n\t\t\t\t\t\tfillSummary replaced by fillRankings\r\n\t\t\t ------ \tsomething like this can also be done\t---------- \r\n\t\t\tthis.setState({uldir: \r\n\t\t\t\t{summary:data.raid_progression.uldir.summary, \r\n\t\t\t\tprogress:data.raid_progression.uldir.summary\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t*/\r\n\r\n\t\tresponse = await fetch('https://raider.io/api/v1/guilds/profile?region=us&realm=lightbringer&name=nfa&fields=raid_rankings')\r\n\t\tlet dataRankings = await response.json()\r\n\r\n\t\tthis.fillRankings('uldir', 'uldir', data, dataRankings, 'Uldir')\r\n\t\tthis.fillRankings('bod', 'battle-of-dazaralor', data, dataRankings, 'Battle of Dazar\\'alor')\r\n\t\tthis.fillRankings('cos', 'crucible-of-storms', data, dataRankings, 'Crucible of Storms')\r\n\t\tthis.fillRankings('tep', 'the-eternal-palace', data, dataRankings, 'Eternal Palace')\r\n\t}\r\n\r\n\tfillRankings(name, longName, data, dataRankings, displayName){\r\n\t\tif (name === 'cos'){\r\n\t\t\tthis.setState( { [name]: \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdisplayName: [displayName],\r\n\t\t\t\t\t\t\tsummary: data.raid_progression[longName].summary,\r\n\t\t\t\t\t\t\tworld: dataRankings.raid_rankings[longName].heroic.world,\r\n\t\t\t\t\t\t\trealm: dataRankings.raid_rankings[longName].heroic.realm\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t })\r\n\t\t}\r\n\t\telse{\r\n\t\tthis.setState( { [name]: \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdisplayName: [displayName],\r\n\t\t\t\t\t\t\tsummary: data.raid_progression[longName].summary,\r\n\t\t\t\t\t\t\tworld: dataRankings.raid_rankings[longName].mythic.world,\r\n\t\t\t\t\t\t\trealm: dataRankings.raid_rankings[longName].mythic.realm\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t })\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\tlet data = this.state\r\n\treturn (\r\n\t\t\t<div className = 'rankings-page'> \r\n\t\t\t\t<div className = 'rankings-container'>\r\n\t\t\t\t\t<div className = 'rankings-row'>\r\n\t\t\t\t\t\t<span className ='rankings-cell'> <h4> Raid Name </h4></span>\r\n\t\t    \t\t\t<span className ='rankings-cell'> <h4> Progress </h4> </span>\r\n\t\t    \t\t\t<span className ='rankings-cell'> <h4> Realm Ranking </h4> </span>\r\n\t\t    \t\t\t<span className ='rankings-cell'> <h4> World Ranking </h4> </span>\r\n\t    \t\t\t</div>\r\n\t\t    \t\t<Rankingslist raidSummary = {data.uldir} />\r\n\t\t    \t\t<Rankingslist raidSummary = {data.bod} />\r\n\t\t    \t\t<Rankingslist raidSummary = {data.cos} />\r\n\t\t    \t\t<Rankingslist raidSummary = {data.tep} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Rankings;","import React, {Component} from 'react';\r\nimport {Link, HashRouter, Route} from 'react-router-dom';\r\nimport editedApp from './editedApp';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Rankings from './Rankings'\r\nimport './home.css'\r\n\r\nclass Home extends Component{\r\n  constructor(props){\r\n    super(props)\r\n      this.state = {\r\n        load: true\r\n      };\r\n  }\r\n\r\n\trender(){\r\n\treturn(\r\n\t\t<HashRouter history=\"browserHistory\">\t     \r\n      \r\n        <Navbar className = 'main-bar'bg=\"light\" expand=\"lg\" style = {{'minHeight': '120px', 'fontSize': '24px', 'width': '100%'}}>\r\n          <Navbar.Brand href=\"\" style = {{'fontSize': '24px'}}>NFA</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link><div className = 'selection'><Link to=\"\" style = {{ 'color': 'black', 'textDecoration': 'none'}} >Rankings</Link></div></Nav.Link>   \r\n              <Nav.Link><div className = 'selection'><Link to=\"editedApp\" style = {{'color': 'black', 'textDecoration': 'none'}}>Roster</Link></div></Nav.Link>\r\n              <NavDropdown title=\"Additional Links\" id=\"basic-nav-dropdown\">   \r\n                <NavDropdown.Item href=\"https://raider.io/guilds/us/lightbringer/NFA\" target = \"_blank\">Raider.io</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"https://www.wowprogress.com/guild/us/lightbringer/NFA\" target = \"_blank\">Wow progress</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"https://www.warcraftlogs.com/guild/id/357706\" target = \"_blank\">Warcraft logs</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\t\t    {this.state.load ? (  <Route path = \"/\" exact component = {Rankings}/> ) : null}\r\n        <Route path = \"/editedApp\" component = {editedApp}/>\r\n\r\n      \r\n\t\t</HashRouter>  \r\n\t\t\r\n    );\r\n\t}\r\n}\r\n\r\nexport default Home;\r\n\r\n/*{this.state.rankingsVisit ? null: ( <Route path = \"/Rankings.js\" component = {Rankings} exact />,  this.setState({homeVisit: false}), this.setState({rankingsVisit: true})) }*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home'\n\n\n\nReactDOM.render(<Home/>, document.getElementById('root'));\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}