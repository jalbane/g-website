{"version":3,"sources":["serviceWorker.js","Roster.js","App.js","Rankingslist.js","Rankings.js","Home.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","then","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","Roster","props","image","roleImgSrc","characterClass","this","spec","TypeError","role","class","loading","className","name","id","target","rel","alt","src","tnail","Component","ReactGA","initialize","pageview","pathname","search","App","blizzResponse","raider","filteredRaider","img","body","Authorization","method","json","data","setState","access_token","url","members","array","filter","arr","rank","character","map","asset_id","index","img_array","Array","length","toLowerCase","asd","push","assets","value","rosterArray","sort","a","b","playable_class","item","key","style","width","color","Spinner","marginBottom","fontSize","size","animation","ButtonGroup","Button","variant","onClick","localeCompare","Rankingslist","raidSummary","displayName","summary","realm","world","React","Rankings","bod","uldir","cos","tep","dataRankings","fillRankings","longName","mythicProg","heroicProg","normalProg","raid_progression","mythic_bosses_killed","heroic_bosses_killed","normal_bosses_killed","raid_rankings","mythic","heroic","normal","marginLeft","castlenathria","Home","history","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","defaultActiveKey","to","margin","marginTop","NavDropdown","title","Item","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26977d57.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\r\nimport './roster.css'\r\n\r\nclass Roster extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n    \timage: []\r\n    };\r\n  }\r\n\r\n\trender(){\r\n\t\tlet roleImgSrc\r\n\t\tlet Specialization\r\n\t\t/*\r\n\t\t\r\n\t\t******** Player specialization and role have been removed from the API.\r\n\t\t\t\t My original design/template no longer displays correctly*/\r\n\t\ttry {\r\n\t\t\tSpecialization = (this.props.spec)\r\n\t\t} \r\n\t\tcatch (error){\r\n\t\t\tif (error instanceof TypeError)\r\n\t\t\t\tSpecialization = 'Error'\r\n\t\t}\t\r\n\r\n\t\t\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (this.props.spec.role === 'HEALING')\r\n\t\t\t\troleImgSrc = 1\r\n\t\t\telse if (this.props.spec.role === 'DPS')\r\n\t\t\t\troleImgSrc = 2\r\n\t\t\telse\r\n\t\t\t\troleImgSrc = 3\r\n\t\t} \r\n\t\tcatch (error){\r\n\t\t\tif (error instanceof TypeError)\r\n\t\t\t\troleImgSrc = null\r\n\t\t}\r\n\t\tlet characterClass\r\n\t\tswitch(this.props.class){\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\tcharacterClass = 'Warrior'\r\n\t\t\t\tbreak\r\n\t\t\tcase 2: \r\n\t\t\t\tcharacterClass = 'Paladin'\r\n\t\t\t\tbreak\r\n\t\t\tcase 3:\r\n\t\t\t\tcharacterClass = 'Hunter'\r\n\t\t\t\tbreak\r\n\t\t\tcase 4:\r\n\t\t\t\tcharacterClass = 'Rogue'\r\n\t\t\t\tbreak\r\n\t\t\tcase 5:\r\n\t\t\t\tcharacterClass = 'Priest'\r\n\t\t\t\tbreak\r\n\t\t\tcase 6:\r\n\t\t\t\tcharacterClass = 'Death Knight'\r\n\t\t\t\tbreak\r\n\t\t\tcase 7:\r\n\t\t\t\tcharacterClass = 'Shaman'\r\n\t\t\t\tbreak\r\n\t\t\tcase 8:\r\n\t\t\t\tcharacterClass = 'Mage'\r\n\t\t\t\tbreak\r\n\t\t\tcase 9:\r\n\t\t\t\tcharacterClass = 'Warlock'\r\n\t\t\t\tbreak\r\n\t\t\tcase 10:\r\n\t\t\t\tcharacterClass = 'Monk'\r\n\t\t\t\tbreak\t\r\n\t\t\tcase 11:\r\n\t\t\t\tcharacterClass = 'Druid'\r\n\t\t\t\tbreak\r\n\t\t\tcase 12:\r\n\t\t\t\tcharacterClass = 'Demon Hunter'\r\n\t\t\t\tbreak\r\n\t\t\tcase 13:\r\n\t\t\t\tcharacterClass = ''\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tcharacterClass = 'Error'\t\t\r\n\t\t}\r\n\t\t//let insetImg = this.props.tnail.replace('-avatar', '-inset')\r\n\t\tif (this.props.loading){\r\n\t\t\treturn (\r\n\t\t\t\t<div className = 'shimmerLoad'>\r\n\t\t\t\t\t\t<div className = 'character-container'>\r\n\t\t\t\t\t\t<div className = 'img-container'> \r\n\t\t\t\t\t\t\t{//<a id = \"redirect\" href = {`https://raider.io/characters/us/lightbringer/${this.props.name}`} target = \"_blank\" rel=\"noopener noreferrer\" >\r\n\t\t\t\t\t\t\t\t<div className = \"img-span\">  </div> \r\n\t\t\t\t\t\t\t//<a>\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span className = \"text-span\"> <strong> {this.props.name} </strong> </span>\r\n\t\t\t\t\t\t{/*<span > Specialization</span>\t*/}\r\n\t\t\t\t\t\t<span className = \"text-span\"> {characterClass}</span>\r\n\t\t\t\t\t\t{ roleImgSrc === 1 \r\n\t\t\t\t\t\t\t? <div className = 'Healer'></div>\r\n\t\t\t\t\t\t\t: roleImgSrc === 2\r\n\t\t\t\t\t\t\t? <div className = 'Dps'></div> \r\n\t\t\t\t\t\t\t:roleImgSrc === 3\r\n\t\t\t\t\t\t\t? <div className = 'Tank'></div>\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t?roleImgSrc === null\r\n\t\t\t\t\t\t\t: <div ></div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t\t<div className = 'character-container'>\r\n\t\t\t\t\t<div className = 'img-container'> \r\n\t\t\t\t\t\t{<a id = \"redirect\" href = {`https://raider.io/characters/us/lightbringer/${this.props.name}`} target = \"_blank\" rel=\"noopener noreferrer\" >\r\n\t\t\t\t\t\t\t<img alt = \"error\" src = {this.props.tnail} />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t} \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span > <strong> {this.props.name} </strong> </span>\r\n\t\t\t\t\t{/*<span > {Specialization}</span>*/\t}\r\n\t\t\t\t\t<span > {characterClass}</span>\r\n\t\t\t\t\t{ roleImgSrc === 1 \r\n\t\t\t\t\t\t? <div className = 'Healer'></div>\r\n\t\t\t\t\t\t: roleImgSrc === 2\r\n\t\t\t\t\t\t? <div className = 'Dps'></div> \r\n\t\t\t\t\t\t:roleImgSrc === 3\r\n\t\t\t\t\t\t? <div className = 'Tank'></div>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t?roleImgSrc === null\r\n\t\t\t\t\t\t: <div ></div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\nexport default Roster;","import React, {Component} from 'react';\r\nimport Roster from './Roster';\r\nimport './App.css';\r\nimport 'tachyons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ReactGA from 'react-ga';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n/*import ListGroup from 'react-bootstrap/ListGroup';*/\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nReactGA.initialize('UA-152946505-1')\r\nReactGA.pageview(window.location.pathname + window.location.search)\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state ={ \r\n      blizzResponse: '',\r\n      loading: true,\r\n      raider: [\r\n\r\n      ],\r\n      filteredRaider: [\r\n\r\n      ],\r\n      img:[\r\n      ]\r\n      \r\n    };\r\n  }\r\n\r\n  async componentDidMount(){\r\n    let response = await fetch(\"https://us.battle.net/oauth/token\", {\r\n      body: \"grant_type=client_credentials\",\r\n      headers: {\r\n        Authorization: \"Basic ODExNmYzNGI1NmY2NGM4ZTlkMDJhYWI2MjY1MjNjMzU6d2FscVFOYTBTZjRKa0MweTBxSllHNk5tRjFuYjJTd3A=\",\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n      },\r\n      method: \"POST\"\r\n    })\r\n    let data = await response.json()\r\n    this.setState({blizzResponse: data.access_token})\r\n    let url = 'https://us.api.blizzard.com/data/wow/guild/lightbringer/no-skill/roster?namespace=profile-us&locale=en_US&access_token='\r\n    url += this.state.blizzResponse\r\n    await fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => this.setState( {[`raider`]: data.members}))\r\n\r\n  \r\n    \r\n  \r\n    /* filter raid roster size */\r\n    let array = this.state.raider\r\n    console.log(array)\r\n    array = array.filter ( arr => arr.rank < 6)\r\n    array = array.filter (arr => arr.character.name !== 'Blinkerbell' && arr.character.name !== 'Rollindeep' && arr.character.name !== 'Reptard' && arr.character.name !== 'Bawlzak')\r\n    array = array.map ( arr => {\r\n      arr.character.asset_id = 0\r\n      return arr\r\n    })\r\n\r\n    this.setState({ ['raider']: array})\r\n    console.log(this.state.raider)\r\n    \r\n    /* attempt to add asset id to state */\r\n    let index = 0 \r\n    let img_array = new Array()\r\n    while (index < this.state.raider.length){\r\n      url = `https://us.api.blizzard.com/profile/wow/character/lightbringer/${this.state.raider[index++].character.name.toLowerCase()}/character-media?namespace=profile-us&locale=en_US&access_token=${this.state.blizzResponse}`\r\n      await fetch(url)\r\n        .then(response => response.json())\r\n        .then(asd => img_array.push(asd.assets[0].value))\r\n    }\r\n    this.setState({['img']: img_array})\r\n    \r\n\r\n    array = array.map( (arr, index) => arr.character.asset_id = this.state.img[index])\r\n\r\n    let rosterArray = this.state.raider\r\n    rosterArray = rosterArray.filter( arr => arr.rank < 6) /*&& arr.character.spec !== undefined*/\r\n    rosterArray = rosterArray.sort( (a,b) => a.character.playable_class.id - b.character.playable_class.id)\r\n    rosterArray = rosterArray.map( (item, index) => \r\n    <Roster name = {item.character.name} \r\n              id = {item.character.id} \r\n              tnail = {item.character.asset_id}\r\n              class = {item.character.playable_class.id}\r\n              key = {index}  \r\n              rank = {item.rank}\r\n              blizzResponse = {this.state.blizzResponse}\r\n    />)\r\n    this.setState({ 'filteredRaider': rosterArray, loading: false})   \r\n  }\r\n\r\n  render(){ \r\n    let rosterArray\r\n\r\n    return ( \r\n      <div className=\"App\">\r\n        { this.state.loading\r\n          ? <div className = 'loading-banner'> \r\n              {//<h1>Loading &nbsp;\r\n                //<Spinner style = {{marginBottom: 5, fontSize: 12}} size = 'md' animation=\"border\" role=\"status\"></Spinner>  \r\n              //</h1>\r\n              }\r\n              <div className = \"loading\">\r\n                <h1 style = {{width: '100%', color: 'White'}}>Loading &nbsp;\r\n                      <Spinner style = {{marginBottom: 5, fontSize: 12}} size = 'md' animation=\"border\" role=\"status\"></Spinner>\r\n                </h1>\r\n                <Roster name = {''} class = {13} loading = {this.state.loading}/>\r\n                <Roster name = {''} class = {13} loading = {this.state.loading}/>\r\n              </div>\r\n            </div>\r\n          :<div className = 'rosterDisplay'> \r\n            <div className = 'buttongrp'>\r\n              <ButtonGroup size = 'lg'>\r\n                <span className = 'sortTab'> Sort By: </span>\r\n                  <Button className = 'sortButton' variant = \"light\" style = {{width: 'auto'}}\r\n                    onClick = {() => {\r\n                      rosterArray = this.state.raider\r\n                      rosterArray = rosterArray.sort( (a,b) => a.character.name.localeCompare(b.character.name))\r\n                      console.log(rosterArray)\r\n                      rosterArray = rosterArray.map( (item, index) => \r\n                      <Roster name= {item.character.name} \r\n                              id = {item.character.id} \r\n                              tnail = {item.character.asset_id}\r\n                              class = {item.character.playable_class.id}\r\n                              key = {index}    \r\n                      />)\r\n                      this.setState({'filteredRaider': rosterArray})\r\n                      }}>\r\n                      Name \r\n                  </Button>\r\n\r\n                  {/*   ----- Role API endpoint has been removed or currently being changed -------\r\n                  <Button className = 'sortButton' variant = \"light\" style = {{width: 'auto'}}\r\n                    onClick = {() => {\r\n                      rosterArray = this.state.raider\r\n                      rosterArray = rosterArray.filter( arr => arr.rank !== 2 && arr.rank < 5 && arr.character.spec !== undefined)\r\n                      rosterArray = rosterArray.sort( (a,b) => b.character.spec.role.localeCompare(a.character.spec.role))\r\n                      rosterArray = rosterArray.map( (item, index) => \r\n                      <Roster name= {item.character.name} \r\n                              tnail = {item.character.thumbnail} \r\n                              spec = {item.character.spec}\r\n                              class = {item.character.class}\r\n                              key = {index}  \r\n                      />)\r\n                      this.setState({'filteredRaider': rosterArray})\r\n                    }}> \r\n                    Role\r\n                  </Button>\r\n                  */}\r\n                    \r\n                    <Button className = 'sortButton' variant = \"light\" style = {{width: 'auto'}}\r\n                      onClick = {() => {          \r\n                        rosterArray = this.state.raider\r\n                        rosterArray = rosterArray.filter( arr => arr.rank < 6)\r\n                        rosterArray = rosterArray.sort( (a,b) => a.rank - b.rank)\r\n                        rosterArray = rosterArray.map( (item, index) => \r\n                        <Roster name= {item.character.name} \r\n                                id = {item.character.id} \r\n                                tnail = {item.character.asset_id}\r\n                                /*spec = {item.character.spec}*/\r\n                                class = {item.character.playable_class.id}\r\n                                key = {index}  \r\n                        />)\r\n                        this.setState({'filteredRaider': rosterArray})\r\n                      }}>\r\n                      Guild Rank\r\n                    </Button>\r\n                    <Button className = 'sortButton' variant = \"light\" style = {{width: 'auto'}}\r\n                      onClick = {() => {\r\n                        rosterArray = this.state.raider\r\n                        rosterArray = rosterArray.filter( arr => arr.rank < 6)\r\n                        rosterArray = rosterArray.sort( (a,b) => a.character.playable_class.id - (b.character.playable_class.id))\r\n                        rosterArray = rosterArray.map( (item, index) => \r\n                        <Roster name= {item.character.name} \r\n                                id = {item.character.id} \r\n                                tnail = {item.character.asset_id}\r\n                                /*spec = {item.character.spec}*/\r\n                                class = {item.character.playable_class.id}\r\n                                key = {index}  \r\n                        />)\r\n                        this.setState({'filteredRaider': rosterArray})\r\n                      }}> \r\n                      Class \r\n                    </Button>\r\n                  </ButtonGroup></div>\r\n              {/* this div is part of the ternary operator*/}\r\n              {this.state.filteredRaider}\r\n            </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\nserviceWorker.register();","import React from 'react';\r\nimport './rankingslist.css';\r\n\r\nclass Rankingslist extends React.Component{\r\n\trender(){\t\r\n\t\treturn (\r\n\t\t\t<div className = 'rankings-row'>\r\n\t\t\t\t<span className ='rankings-cell'> <h5> {this.props.raidSummary.displayName} </h5> </span>\r\n\t    \t\t<span className ='rankings-cell'> {this.props.raidSummary.summary} </span>\r\n\t    \t\t<span className ='rankings-cell'> {this.props.raidSummary.realm} </span>\r\n\t    \t\t<span className ='rankings-cell'> {this.props.raidSummary.world} </span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Rankingslist;\r\n","import React from 'react'\r\nimport './rankings.css'\r\nimport Rankingslist from './Rankingslist'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nclass Rankings extends React.Component{\r\n\tconstructor(props){\r\n\tsuper(props)\r\n\tthis.state = {\r\n\t\t\tloading: true,\r\n\t\t\tbod: {\r\n\r\n\t\t\t},\r\n\t\t\tuldir: {\r\n\r\n\t\t\t},\r\n\t\t\tcos: {\r\n\r\n\t\t\t},\r\n\t\t\ttep: {\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount(){\r\n\t\tlet response= await fetch('https://raider.io/api/v1/guilds/profile?region=US&realm=Lightbringer&name=No%20Skill&fields=raid_progression')\r\n\t\tlet data = await response.json()\r\n\t\tconsole.log(data)\r\n\t\t/*********\t\tReplaced by function fillSummary \t***********\r\n\t\t\t\t\t\tfillSummary replaced by fillRankings\r\n\t\t\t ------ \tsomething like this can also be done\t---------- \r\n\t\t\tthis.setState({uldir: \r\n\t\t\t\t{summary:data.raid_progression.uldir.summary, \r\n\t\t\t\tprogress:data.raid_progression.uldir.summary\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t*/\r\n\r\n\t\tresponse = await fetch('https://raider.io/api/v1/guilds/profile?region=us&realm=Lightbringer&name=No%20Skill&fields=raid_rankings')\r\n\t\tlet dataRankings = await response.json()\r\n\r\n\t\tthis.fillRankings('castlenathria', 'castle-nathria', data, dataRankings, 'Castle Nathria')\r\n\t\t\r\n\t\tthis.setState({loading: false})\r\n\t}\r\n\r\n\tfillRankings(name, longName, data, dataRankings, displayName){\r\n\t\tlet mythicProg, heroicProg, normalProg;\r\n\t\tmythicProg = data.raid_progression[longName].mythic_bosses_killed;\r\n\t\theroicProg = data.raid_progression[longName].heroic_bosses_killed;\r\n\t\tnormalProg = data.raid_progression[longName].normal_bosses_killed\r\n\t\tif (mythicProg >= 1){\r\n\t\t\tthis.setState( { [name]: \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdisplayName: displayName,\r\n\t\t\t\t\t\t\tsummary: data.raid_progression[longName].summary,\r\n\t\t\t\t\t\t\tworld: dataRankings.raid_rankings[longName].mythic.world,\r\n\t\t\t\t\t\t\trealm: dataRankings.raid_rankings[longName].mythic.realm\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t })\r\n\t\t}\r\n\t\telse if (heroicProg >= 1){\r\n\t\t\tthis.setState( { [name]: \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdisplayName: displayName,\r\n\t\t\t\t\t\t\tsummary: data.raid_progression[longName].summary,\r\n\t\t\t\t\t\t\tworld: dataRankings.raid_rankings[longName].heroic.world,\r\n\t\t\t\t\t\t\trealm: dataRankings.raid_rankings[longName].heroic.realm\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t })\r\n\t\t}\r\n\t\telse if (normalProg >= 1){\r\n\t\t\tthis.setState( { [name]: \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdisplayName: displayName,\r\n\t\t\t\t\t\t\tsummary: data.raid_progression[longName].summary,\r\n\t\t\t\t\t\t\tworld: dataRankings.raid_rankings[longName].normal.world,\r\n\t\t\t\t\t\t\trealm: dataRankings.raid_rankings[longName].normal.realm\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t })\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setState( { [name]: \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdisplayName: displayName,\r\n\t\t\t\t\t\t\tsummary: 'N/A',\r\n\t\t\t\t\t\t\tworld: 'N/A',\r\n\t\t\t\t\t\t\trealm: 'N/A'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t })\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\tlet data = this.state\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.state.loading\r\n\t\t\t\t\t? <div className = 'loading-banner-home'> \r\n\t\t\t              <h1 style = {{width: '100%', marginLeft: '45%'}}>Loading &nbsp;\r\n\t\t\t                <Spinner style = {{marginBottom: 5, fontSize: 12}} size = 'md' animation=\"border\" role=\"status\"></Spinner>\r\n\t\t\t              </h1>\r\n\t\t\t            </div>\r\n\t\t\t        : <div className = 'rankings-page'>\r\n\t\t\t        \t<div className = 'title-cell'> <h4> No Fun Allowed - Lightbringer (US) </h4> </div>\r\n\t\t\t\t\t\t<div className = 'rankings-container'>\r\n\t\t\t\t\t\t\t<div className = 'rankings-row'>\r\n\t\t\t\t\t\t\t\t<span className ='rankings-cell'> <h4> Raid Name </h4></span>\r\n\t\t\t\t    \t\t\t<span className ='rankings-cell'> <h4> Progress </h4> </span>\r\n\t\t\t\t    \t\t\t<span className ='rankings-cell'> <h4> Realm Ranking </h4> </span>\r\n\t\t\t\t    \t\t\t<span className ='rankings-cell'> <h4> World Ranking </h4> </span>\r\n\t\t\t    \t\t\t</div>\r\n\t\t\t\t    \t\t<Rankingslist raidSummary = {data.castlenathria} />\r\n\t\t\t\t    \t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t    }\r\n\t\t\t</div>\t\r\n\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Rankings;\r\nserviceWorker.register();","import React, {Component} from 'react';\r\nimport {HashRouter, Route, NavLink} from 'react-router-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Rankings from './Rankings'\r\nimport ReactGA from 'react-ga'\r\n\r\nReactGA.initialize('UA-152946505-1')\r\nReactGA.pageview(window.location.pathname + window.location.search)\r\n\r\nclass Home extends Component{\r\n\trender(){\r\n\treturn(\r\n\t\t<HashRouter history=\"browserHistory\">\t     \r\n      <Navbar className = 'main-bar'bg=\"light\" expand=\"lg\" style = {{'textAlign': 'center', 'minHeight': '120px', 'fontSize': '24px', 'width': '100%'}}>\r\n          <Navbar.Brand style = {{'fontSize': '24px'}}>NFA</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"justify-content-center\" defaultActiveKey = \"/\">\r\n              <NavLink to=\"/\" ><Button style = {{'fontSize': '24px', margin: 15, marginTop: 22}} variant = 'outline-dark' size = 'md'> Rankings  </Button></NavLink>   \r\n              <NavLink to=\"/Roster\"><Button style = {{'fontSize': '24px', margin: 15, marginTop: 22}}variant = 'outline-dark' size = 'md'> Roster  </Button></NavLink>\r\n              <NavDropdown style = {{marginTop: 22}} title=\"Additional Links\">   \r\n                <NavDropdown.Item href=\"https://raider.io/guilds/us/lightbringer/NFA\" target = \"_blank\">Raider.io</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"https://www.wowprogress.com/guild/us/lightbringer/NFA\" target = \"_blank\">Wow progress</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"https://www.warcraftlogs.com/guild/id/357706\" target = \"_blank\">Warcraft logs</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Route exact path = \"/\"  component = {Rankings}/> \r\n        <Route path = \"/Roster\" component = {App}/>\r\n\t\t</HashRouter>  \r\n  );\r\n\t}\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home'\nimport ReactGA from 'react-ga'\n\nReactGA.initialize('UA-152946505-1')\nReactGA.pageview(window.location.pathname + window.location.search)\nReactDOM.render(<Home/>, document.getElementById('root'));\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}